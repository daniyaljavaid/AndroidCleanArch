plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id("kotlin-kapt")
    id("dagger.hilt.android.plugin")
    id('com.google.gms.google-services')
    id('com.google.firebase.crashlytics')
}

android {
    compileSdk 31
    buildFeatures {
        dataBinding true
    }

    defaultConfig {
        applicationId "com.dj.app"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            def keyStoreFile = project.rootProject.file("keystore.properties")
            if (keyStoreFile.exists()) {

                Properties properties = new Properties()
                properties.load(keyStoreFile.newDataInputStream())

                storeFile file(properties.getProperty('signingConfig.certPath'))
                storePassword properties.getProperty('signingConfig.storePassword')
                keyAlias properties.getProperty('signingConfig.keyAlias')
                keyPassword properties.getProperty('signingConfig.keyPassword')

            }

        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            buildConfigField("String", "BASE_URL", "\"https://591143b0-e6ad-428a-8266-85cafd62f06d.mock.pstmn.io/\"")
            buildConfigField("Boolean", "IS_ENCRYPTION_ENABLED", "false")
            buildConfigField("Boolean", "IS_TLS_ENABLED", "false")
            buildConfigField("String", "DATA_STORE_NAME", "\"DATA_STORE_DEBUGGING\"")
            buildConfigField("String", "DB_NAME", "\"ROOM_DB_DEBUG\"")
            buildConfigField("int", "DB_VERSION", '1')
            buildConfigField("long", "TIME_OUT", '30')

            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "app-${variant.name}-${defaultConfig.versionName}.apk"
                }
            }
        }
        stag {
            minifyEnabled false
            debuggable true
            buildConfigField("String", "BASE_URL", "\"https://591143b0-e6ad-428a-8266-85cafd62f06d.mock.pstmn.io/\"")
            buildConfigField("Boolean", "IS_ENCRYPTION_ENABLED", "false")
            buildConfigField("Boolean", "IS_TLS_ENABLED", "false")
            buildConfigField("String", "DATA_STORE_NAME", "\"DATA_STORE_STAGING\"")
            buildConfigField("String", "DB_NAME", "\"ROOM_DB_STAG\"")
            buildConfigField("int", "DB_VERSION", '1')
            buildConfigField("long", "TIME_OUT", '30')

            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "app-${variant.name}-${defaultConfig.versionName}.apk"
                }
            }
        }
        release {
            minifyEnabled true
            debuggable false
            buildConfigField("String", "BASE_URL", "\"https://591143b0-e6ad-428a-8266-85cafd62f06d.mock.pstmn.io/\"")
            buildConfigField("Boolean", "IS_ENCRYPTION_ENABLED", "false")
            buildConfigField("Boolean", "IS_TLS_ENABLED", "false")
            buildConfigField("String", "DATA_STORE_NAME", "\"DATA_STORE_RELEASE\"")
            buildConfigField("String", "DB_NAME", "\"ROOM_DB_REL\"")
            buildConfigField("int", "DB_VERSION", '1')
            buildConfigField("long", "TIME_OUT", '30')

            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "app-${variant.name}-${defaultConfig.versionName}.apk"
                }
            }
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation project(path: ':core')
    implementation project(path: ':feature:login')
    implementation project(path: ':feature:home')

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.annotation:annotation:1.3.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    implementation 'androidx.databinding:databinding-runtime:7.1.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation("com.google.dagger:hilt-android:2.40")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")

    implementation 'com.jakewharton.timber:timber:5.0.1'

    implementation("androidx.room:room-runtime:2.4.1")
    annotationProcessor("androidx.room:room-compiler:2.4.1")
    kapt("androidx.room:room-compiler:2.4.1")
    implementation("androidx.room:room-ktx:2.4.1")
    implementation("androidx.room:room-paging:2.4.1")

    implementation("com.squareup.retrofit2:retrofit:2.9.0")
    implementation("com.squareup.okhttp3:logging-interceptor:4.9.0")
    implementation("com.squareup.retrofit2:converter-gson:2.9.0")

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0")

    implementation 'com.google.android.material:material:1.5.0'

    implementation "androidx.activity:activity-ktx:1.4.0"
    implementation "androidx.fragment:fragment-ktx:1.4.0"


    implementation platform('com.google.firebase:firebase-bom:29.0.4')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.0'

}